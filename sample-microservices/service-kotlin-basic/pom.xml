<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- Generated by com.github.frtu.archetype:kotlin-spring-boot-project-archetype:1.2.5-SNAPSHOT -->
    <parent>
        <groupId>com.github.frtu.logs.example</groupId>
        <artifactId>sample-microservices</artifactId>
        <version>1.1.5-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>service-kotlin-basic</artifactId>

    <properties>
        <start-class>com.github.frtu.sample.complex.ApplicationBasicKt</start-class>
        <!--===========================-->
        <frtu.base-pom.version>1.2.5-SNAPSHOT</frtu.base-pom.version>
        <frtu.libs.version>1.2.2</frtu.libs.version>
        <frtu.logger.version>1.1.4</frtu.logger.version>
        <!--===========================-->
        <reactor-kafka.version>1.3.10</reactor-kafka.version>
        <!--===========================-->
        <!-- https://kotlinlang.org/docs/reference/using-maven.html -->
        <kotlin.version>1.5.32</kotlin.version>
        <kotlinx.version>1.5.2</kotlinx.version>
        <kotlin.test.version>3.4.2</kotlin.test.version>
        <!-- CHECK FOR COMPILER PROPS : https://kotlinlang.org/docs/reference/using-maven.html#attributes-common-for-jvm-and-js-->
        <kotlin.code.style>official</kotlin.code.style>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <!--KOTLIN MODE : https://kotlinlang.org/docs/reference/compiler-plugins.html-->
        <!-- * Enable kotlin.mode to allow AOP and avoid compiled class to be final -->
        <!-- <kotlin.mode>jpa|no-arg</kotlin.mode>-->
        <kotlin.plugin.dep>kotlin-maven-noarg</kotlin.plugin.dep>
        <!-- <kotlin.plugin.dep>kotlin-maven-sam-with-receiver</kotlin.plugin.dep>-->
        <!-- <kotlin.mode>sam-with-receiver</kotlin.mode>-->
        <!--===========================-->
        <!-- https://github.com/eclipse/jkube/tree/master/quickstarts/maven/docker-file-simple -->
        <jkube.version>1.5.1</jkube.version>
        <jkube.enricher.jkube-service.type>NodePort</jkube.enricher.jkube-service.type>
    </properties>

    <dependencies>
        <!--Automatic configuration needs to introduce an embedded database type object-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <!--===========================-->
        <!-- ASYNCHRONOUS-->
        <!--===========================-->
        <!-- BROKER -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>io.projectreactor.kafka</groupId>
            <artifactId>reactor-kafka</artifactId>
            <version>${reactor-kafka.version}</version>
        </dependency>

        <!-- WEB -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-webflux-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>

        <!-- PERSISTANCE -->
        <!-- UNCOMMENT FOR R2DBC 1/3 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-r2dbc</artifactId>
        </dependency>
        <!-- r2dbc libraries for h2, mysql or postgres -->
        <dependency>
            <groupId>io.r2dbc</groupId>
            <artifactId>r2dbc-h2</artifactId>
        </dependency>

        <!--===========================-->
        <!-- Utilities -->
        <!--===========================-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <!-- spring-boot configuration-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
        <!-- Needed to activate @ExecutionSpan annotation-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- DevTools and Monitoring-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--===========================-->
        <!-- Kotlin -->
        <!--===========================-->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <!-- ASYNCHRONOUS-->
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactor</artifactId>
        </dependency>

        <!--===========================-->
        <!--Test -->
        <!--===========================-->
        <dependency>
            <groupId>io.kotlintest</groupId>
            <artifactId>kotlintest-runner-junit5</artifactId>
            <version>${kotlin.test.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>classgraph</artifactId>
                    <groupId>io.github.classgraph</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- https://mockk.io/ -->
        <dependency>
            <groupId>io.mockk</groupId>
            <artifactId>mockk</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- https://assertj.github.io/doc/ -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Application tests libs-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-boot-starter-logging</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ninja-squad</groupId>
            <artifactId>springmockk</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--===========================-->
        <!-- Platform - Lombok and Logback -->
        <!--===========================-->
        <dependency>
            <groupId>com.github.frtu.logs</groupId>
            <artifactId>logger-core</artifactId>
            <version>${frtu.logger.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.frtu.libs</groupId>
            <artifactId>lib-utils</artifactId>
            <version>${frtu.libs.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- https://kotlinlang.org/docs/reference/using-maven.html -->
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <!--https://kotlinlang.org/docs/reference/compiler-plugins.html-->
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                        <!-- UNCOMMENT FOR JPA 2/3 -->
                        <!--<plugin>all-open</plugin>-->
                        <!--<plugin>jpa</plugin>-->
                    </compilerPlugins>
                    <jvmTarget>${java.version}</jvmTarget>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <!-- UNCOMMENT FOR JPA 3/3 -->
                    <!--    <dependency>-->
                    <!--        <groupId>org.jetbrains.kotlin</groupId>-->
                    <!--        <artifactId>kotlin-maven-noarg</artifactId>-->
                    <!--        <version>${kotlin.version}</version>-->
                    <!--    </dependency>-->
                </dependencies>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <!-- UNCOMMMENT TO MIX WITH JAVA -->
                                <!--<sourceDir>${project.basedir}/src/main/java</sourceDir>-->
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <!-- UNCOMMMENT TO MIX WITH JAVA -->
                                <!--<sourceDir>${project.basedir}/src/test/java</sourceDir>-->
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <skip>${maven.test.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- attached to Maven test phase -->
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>spotbugs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- Finding bugs - https://spotbugs.github.io/spotbugs-maven-plugin/spotbugs-mojo.html -->
                <configuration>
                    <!-- List of visitors : https://spotbugs-in-kengo-toda.readthedocs.io/en/lqc-list-detectors/detectors.html#standard-detectors-->
                    <!-- Detailed descriptions : http://findbugs.sourceforge.net/bugDescriptions.html -->
                    <omitVisitors>FindNullDeref,FindBadCast2,CheckRelaxingNullnessAnnotation,InconsistentAnnotations,NoteUnconditionalParamDerefs,OptionalReturnNull,SynchronizeAndNullCheckField,BooleanReturnNull</omitVisitors>
                </configuration>
            </plugin>
            <!-- Generate source jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Generate Javadocs : https://github.com/Kotlin/dokka -->
            <!-- UNCOMMENT IF THE PROJECT IS HAS A GIT FOLDER -->
            <!--<plugin>-->
            <!--    <groupId>pl.project13.maven</groupId>-->
            <!--    <artifactId>git-commit-id-plugin</artifactId>-->
            <!--    <version>2.2.1</version>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <!--https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-properties-and-configuration-->
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <!-- Packaging -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- https://github.com/eclipse/jkube/tree/master/quickstarts/maven/docker-file-simple -->
            <plugin>
                <groupId>org.eclipse.jkube</groupId>
                <artifactId>kubernetes-maven-plugin</artifactId>
                <version>${jkube.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.8</version>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>4.1.3</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <!--KOTLIN MODE : https://kotlinlang.org/docs/reference/compiler-plugins.html-->
        <profile>
            <id>jpa</id>
            <!-- activate if system properties 'kotlin.mode=<SEE_ABOVE>' -->
            <activation>
                <!-- this profile is active by default -->
                <!--<activeByDefault>true</activeByDefault>-->
                <property>
                    <name>kotlin.mode</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-data-jpa</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>kotlin-maven-plugin</artifactId>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <version>${kotlin.version}</version>
                        <configuration>
                            <args>
                                <arg>-Xjsr305=strict</arg>
                            </args>
                            <compilerPlugins>
                                <plugin>spring</plugin>
                                <plugin>all-open</plugin>
                                <plugin>jpa</plugin>
                            </compilerPlugins>
                            <jvmTarget>${java.version}</jvmTarget>
                            <!--<pluginOptions>-->
                            <!--    <option>all-open:annotation=javax.persistence.Entity</option>-->
                            <!--    <option>all-open:annotation=javax.persistence.Embeddable</option>-->
                            <!--    <option>all-open:annotation=javax.persistence.MappedSuperclass</option>-->
                            <!--    <option>jpa:annotation=javax.persistence.Entity</option>-->
                            <!-- Each annotation is placed on its own line -->
                            <!--    <option>all-open:annotation=com.my.Annotation</option>-->
                            <!--    <option>sam-with-receiver:annotation=com.my.SamWithReceiver</option>-->
                            <!--</pluginOptions>-->
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.jetbrains.kotlin</groupId>
                                <artifactId>kotlin-maven-allopen</artifactId>
                                <version>${kotlin.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.jetbrains.kotlin</groupId>
                                <artifactId>kotlin-maven-noarg</artifactId>
                                <version>${kotlin.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- https://github.com/eclipse/jkube/blob/master/quickstarts/maven/docker-file-provided/pom.xml#L101-L125 -->
        <profile>
            <id>registry-k8s</id>
            <activation>
                <!-- if this profile is active by default -->
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <docker.registry>myregistry-127-0-0-1.nip.io:5000</docker.registry>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.jkube</groupId>
                        <artifactId>kubernetes-maven-plugin</artifactId>
                        <version>${jkube.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <images>
                                <image>
                                    <!-- https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin#registry -->
                                    <registry>${docker.registry}</registry>
                                    <name>${project.artifactId}:${project.version}</name>
                                    <build>
                                        <!-- https://www.eclipse.org/jkube/docs/kubernetes-maven-plugin#external-dockerfile -->
                                        <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                        <filter>@</filter>
                                    </build>
                                </image>
                            </images>
                            <buildArgs>
                                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <!-- https://kotlinlang.org/docs/reference/using-maven.html -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-bom</artifactId>
                <version>${kotlin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- https://kotlinlang.org/docs/tutorials/coroutines/async-programming.html -->
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-bom</artifactId>
                <version>${kotlinx.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Boot and Platform -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Boot and Platform -->
            <!--<dependency>-->
            <!--    <groupId>org.springframework</groupId>-->
            <!--    <artifactId>spring-framework-bom</artifactId>-->
            <!--    <version>${spring-framework.version}</version>-->
            <!--    <type>pom</type>-->
            <!--    <scope>import</scope>-->
            <!--</dependency>-->
            <!-- Internal domain dependencies -->
            <dependency>
                <groupId>com.github.frtu.archetype</groupId>
                <artifactId>kotlin-base-pom</artifactId>
                <version>1.2.5-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--ONLY NEEDED IF YOU WANT TO OVERRIDE SPRING DEPENDENCIES MGMT.-->
            <dependency>
                <groupId>io.r2dbc</groupId>
                <artifactId>r2dbc-bom</artifactId>
                <version>${r2dbc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--<dependency>-->
            <!--<groupId>com.github.frtu.logs</groupId>-->
            <!--<artifactId>tools-bom</artifactId>-->
            <!--<version>${frtu.tools.version}</version>-->
            <!--<type>pom</type>-->
            <!--<scope>import</scope>-->
            <!--</dependency>-->
        </dependencies>
    </dependencyManagement>
</project>