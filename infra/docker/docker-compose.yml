version: '3'
services:
  elasticsearch:
    image: ${ELASTICSEARCH_IMAGE}
    environment:
      - "discovery.type=single-node"
    expose:
      - "9200"
    ports:
      - "9200:9200"
    networks:
      - efk
    # https://docs.docker.com/config/containers/logging/fluentd/
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: efk.elasticsearch

  kibana:
    image: ${KIBANA_IMAGE}
    links:
      - "elasticsearch"
    ports:
      - "5601:5601"
    networks:
      - efk
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    # https://docs.docker.com/config/containers/logging/fluentd/
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: efk.kibana

  fluentd:
    build: ./fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    links:
      - "elasticsearch"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
      - "9880:9880"
    networks:
      - efk
    # https://docs.docker.com/config/containers/logging/fluentd/
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
        max-file: "2"

  web:
    image: ${HTTPD_IMAGE}
    ports:
      - "80:80"
    networks:
      - efk
    links:
      - fluentd
    # https://docs.docker.com/config/containers/logging/fluentd/
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: httpd.access

  jaeger:
    image: ${JAEGER_IMAGE}
    links:
      - "elasticsearch"
    ports:
      - "5778:5778"
      - "6831:6831/udp"
      - "14250:14250"
      - "14267:14267"
      - "14268:14268"
      - "16686:16686"
    networks:
      - efk
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://elasticsearch:9200
      ES_TAGS_AS_FIELDS_ALL: "true"
    healthcheck:
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html
      test: ["CMD", "curl", "--fail", "http://elasticsearch:9200/_cluster/health"]
      interval: 30s
      timeout: 40s
      retries: 5

# https://docs.docker.com/compose/networking/
networks:
  efk:
    driver: bridge
    # To enable IPv6 uncomment below lines
#    driver_opts:
#        com.docker.network.enable_ipv6: "true"
