version: '3'
services:
  elasticsearch.logging:
    image: ${ELASTICSEARCH_IMAGE}
    restart: always
    environment:
      - 'node.name=LOGGING'
      - 'discovery.type=single-node'
#      - 'bootstrap.memory_lock=true'
#      - 'ES_JAVA_OPTS=-Xms256m -Xmx256m'
    expose:
      - 9200
    ports:
      - 9200:9200
    networks:
      - logging
#    volumes:
#      - ~/data/elasticsearch:/usr/share/elasticsearch/data

  kibana.logging:
    image: ${KIBANA_IMAGE}
    links:
      - elasticsearch.logging
    restart: always
    ports:
      - 5601:5601
    networks:
      - logging
    environment:
      # https://www.elastic.co/guide/en/kibana/current/docker.html
      ELASTICSEARCH_HOSTS: http://elasticsearch.logging:9200

  fluentd.logging:
    image: ${FLUENTD_IMAGE}
    volumes:
      - ./fluentd/conf:/etc/fluent
#    build: ./fluentd
#    volumes:
#      - ./fluentd/conf:/fluentd/etc
    links:
      - elasticsearch.logging
    ports:
      - 24224:24224
      - 24224:24224/udp
      - 9880:9880
    networks:
      - logging
    environment:
      ES_PORT_9200_TCP_ADDR: elasticsearch.logging
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
        max-file: "2"

  jaeger.logging:
    image: ${JAEGER_IMAGE}
    links:
      - elasticsearch.logging
    # https://www.jaegertracing.io/docs/1.14/deployment/
    # https://www.jaegertracing.io/docs/1.14/monitoring/
    ports:
      - 5778:5778
      - 6831:6831/udp
      - 14250:14250
      - 14267:14267
      - 14268:14268
      - 16686:16686
    networks:
      - logging
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://elasticsearch.logging:9200
      ES_TAGS_AS_FIELDS_ALL: "true"
    healthcheck:
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html
      test: ["CMD", "curl", "--fail", "http://elasticsearch.logging:9200/_cluster/health"]
      interval: 30s
      timeout: 40s
      retries: 5

  prometheus:
    image: ${PROMETHEUS_IMAGE}
    hostname: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
#      - ~/data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    networks:
      - logging
  node-exporter:
    image: ${NODE_EXPORTER_IMAGE}
    ports:
      - 9100:9100
    networks:
      - logging
#  alertmanager:
#    image: ${ALERTMANAGER_IMAGE}
#    restart: unless-stopped
#    volumes:
#      - ./alertmanager:/etc/alertmanager
#    command:
#      - '--config.file=/etc/alertmanager/config.yml'
#      - '--storage.path=/alertmanager'
#    expose:
#      - 9093
#    networks:
#      - logging
  grafana:
    image: ${GRAFANA_IMAGE}
    hostname: grafana
    depends_on:
      - prometheus
#    environment:
#      - 'GF_SECURITY_ADMIN_PASSWORD=YourPassword'
#    volumes:
#      - ./grafana.ini:/etc/grafana/grafana.ini
#      - ~/data/grafana:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - logging

# https://docs.docker.com/compose/networking/
networks:
  logging:
    driver: bridge
    # To enable IPv6 uncomment below lines
#    driver_opts:
#        com.docker.network.enable_ipv6: "true"
