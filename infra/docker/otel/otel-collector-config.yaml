## https://opentelemetry.io/docs/collector/configuration/

# https://github.com/open-telemetry/opentelemetry-collector/blob/main/receiver/README.md
# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver
receivers:
  # Data sources: traces, metrics, logs
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
    timeout: 1s
#  resource:
#    attributes:
#      - key: test.key
#        value: "test-value"
#        action: insert

exporters:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/prometheusexporter
  prometheus:
    # https://grafana.com/blog/2022/05/04/how-to-capture-spring-boot-metrics-with-the-opentelemetry-java-instrumentation-agent/
    endpoint: "0.0.0.0:8889"
    const_labels:
      source: logplatform
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/jaegerexporter
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/loggingexporter/README.md
  logging:
    logLevel: debug
    sampling_initial: 5
    sampling_thereafter: 200

service:
  pipelines:
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging, prometheus]
    traces:
      receivers: [otlp,jaeger]
      processors: [batch]
      exporters: [jaeger]
